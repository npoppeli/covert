atom.py
-------
define_atom('gender', ...) in application, not in framework
genders = ['?', 'v', 'm'] must be I18N
define_atom('boolean', ...) also I18N

config.py
---------
* I18N the right way
  - http://inventwithpython.com/blog/2014/12/20/translate-your-python-3-program-with-the-gettext-module/
  - https://flufli18n.readthedocs.io/en/latest/docs/using.html
  -  http://pylonsbook.com/en/1.1/internationalization-and-localization.html
* make argument list in parse_cmdline configurable

model.py
--------
* embedding in show panels
* embedding and linking in form panels
* display_reference uses View.url_for()
* tools for adding, modifying and deleting items with multiple=True
* tools for adding, modifying and deleting item references
* tools for adding, modifying and deleting sub-items
* item revisions (add 'rev' attribute)
* make labels in BareItem language-dependent (I18N)
* 'active' attribute in BareItem is not auto, but has a default (True)

Notes on item revisions
1. If the number of revisions is low, keep all of them in the storage, and mark the
   most recent one of them as the active revision.
2. Otherwise, keep only the active revision in the item storage, and store
   backward deltas in a separate storage (use libdiff for text).

List items in forms: add grid buttons 'insert before' and 'insert after'
(FontAwesome: angle-double-up and angle-double-down). JavaScript with local action.

Item references in forms: t0 and t2 readonly=true, t1 hidden.
JavaScript with server interaction.

view.py
-------
* I18N of setting.labels and messages
* authorization determines icon and button states (enabled, disabled)
* delete button is enabled iff item.active
* add 'import' method (form-based file upload, CSV and JSON)
* make ItemView.sort independent from db engine
* pass ItemView.sort to render tree methods in a more elegant way
* define icon and label for custom methods
* Use Mirage (JS) for client-side generation of search queries
* add boolean vector 'active' to the render tree (add_item, add_items)
* add 'title' attribute to render tree, let routes fill this; apply in templates
* boolean vectors in itemlist: active (default), recently modified (with event handler)

engine/mongodb.py
-----------------

* make database connection thread-safe
* text index via Collection.ensureIndex({'author': 'text', 'content': 'text'})

engine/rethinkdb.py
-------------------
not started yet